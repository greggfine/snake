{"mappings":"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","sources":["src/scales.ts"],"sourcesContent":["class Scale {\n  name: string;\n  intervals: number[];\n  notes: { [key: number]: { note: string; frequency: number } };\n  constructor(name: string, intervals: number[]) {\n    this.name = name;\n    this.intervals = intervals;\n    this.notes = {\n      0: { note: \"C\", frequency: 261.63 },\n      1: { note: \"C#\", frequency: 277.18 },\n      2: { note: \"D\", frequency: 293.66 },\n      3: { note: \"D#\", frequency: 311.13 },\n      4: { note: \"E\", frequency: 329.63 },\n      5: { note: \"F\", frequency: 349.23 },\n      6: { note: \"F#\", frequency: 369.99 },\n      7: { note: \"G\", frequency: 392.0 },\n      8: { note: \"G#\", frequency: 415.3 },\n      9: { note: \"A\", frequency: 440.0 },\n      10: { note: \"A#\", frequency: 466.16 },\n      11: { note: \"B\", frequency: 493.88 },\n    };\n  }\n}\n\nfunction getScaleNotes(tonicNote: number, scale: Scale, useSharps = false) {\n  const notes = [];\n  for (let i = 0; i < scale.intervals.length; i++) {\n    const interval = scale.intervals[i];\n    notes.push((tonicNote + interval) % 12);\n  }\n  const noteNames = useSharps\n    ? [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\n    : [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\n\n  const mainNotes = notes.map((note) => ({\n    note: noteNames[note],\n    frequency: scale.notes[note].frequency,\n  }));\n\n  const allNoteNames = noteNames.slice(0, 12); // Get first 12 notes\n  const allNotes = allNoteNames.map((noteName) => ({\n    note: noteName,\n    //@ts-ignore\n    frequency: scale.notes[tonics[noteName]].frequency,\n  }));\n  const complementaryNotes = allNotes.filter((note) => {\n    return !mainNotes.some((n) => {\n      return n.note === note.note;\n    });\n  });\n  return {\n    mainNotes,\n    complementaryNotes,\n  };\n}\n\nconst scales = {\n  ionian: new Scale(\"Ionian\", [0, 2, 4, 5, 7, 9, 11]),\n  dorian: new Scale(\"Dorian\", [0, 2, 3, 5, 7, 9, 10]),\n  phrygian: new Scale(\"Phrygian\", [0, 1, 3, 5, 7, 8, 10]),\n  lydian: new Scale(\"Lydian\", [0, 2, 4, 6, 7, 9, 11]),\n  mixolydian: new Scale(\"Mixolydian\", [0, 2, 4, 5, 7, 9, 10]),\n  aeolian: new Scale(\"Aeolian\", [0, 2, 3, 5, 7, 8, 10]),\n  locrian: new Scale(\"Locrian\", [0, 1, 3, 5, 6, 8, 10]),\n};\n\nconst tonics = {\n  C: 0,\n  \"C#\": 1,\n  Db: 1,\n  D: 2,\n  \"D#\": 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  \"F#\": 6,\n  Gb: 6,\n  G: 7,\n  \"G#\": 8,\n  Ab: 8,\n  A: 9,\n  \"A#\": 10,\n  Bb: 10,\n  B: 11,\n};\n\nconst tonicNotes = [\n  \"C\",\n  \"C#/Db\",\n  \"D\",\n  \"D#/Eb\",\n  \"E\",\n  \"F\",\n  \"F#/Gb\",\n  \"G\",\n  \"G#/Ab\",\n  \"A\",\n  \"A#/Bb\",\n  \"B\",\n];\n\nconst tonicNoteLookup = {\n  \"C#\": \"Db\",\n  Db: \"C#\",\n  \"D#\": \"Eb\",\n  Eb: \"D#\",\n  \"F#\": \"Gb\",\n  Gb: \"F#\",\n  \"G#\": \"Ab\",\n  Ab: \"G#\",\n  \"A#\": \"Bb\",\n  Bb: \"A#\",\n};\n"],"names":[],"version":3,"file":"index.8638570b.js.map","sourceRoot":"/__parcel_source_root/"}